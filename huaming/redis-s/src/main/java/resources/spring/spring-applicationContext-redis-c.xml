<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	   http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	<context:property-placeholder location="classpath:resources/prop/redis_conf.properties" />
	<context:component-scan base-package="com.huaming.*" />
	<context:annotation-config />
     <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxIdle" value="${redis.maxIdle}" />  
        <property name="maxTotal" value="${redis.maxActive}" /> 
        <!-- <property name="maxWait" value="${redis.maxWait}" />   -->
        <property name="testOnBorrow" value="false" />  
    </bean>  
      
    <bean id="jredisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  
        p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.pwd}"  p:pool-config-ref="poolConfig"/>  
     
     <bean id = "jedisPool" class="redis.clients.jedis.JedisPool">
      <constructor-arg index="0" ref="poolConfig"/>
      <constructor-arg index="1" value="${redis.host}"/>
      <constructor-arg index="2" value="${redis.port}" type="int"/>
      <constructor-arg index="3" value="10000" type="int"/>
      <constructor-arg index="4" value="${redis.pwd}"/>
    </bean>
    <!-- 集群配置 -->
    <!--  <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool"  scope="singleton">
        <constructor-arg index="0" ref="poolConfig" />
        <constructor-arg index="1">
            <list>
                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg name="host" value="${redis.host}" />
                    <constructor-arg name="port" type="int" value="${redis.port}" />
                    <constructor-arg name="connectionTimeout" type="int" value="10000" />
                    <constructor-arg name="soTimeout" type="int" value="10000" />
                    <constructor-arg name="weight"  type="int" value="1" />
                </bean>
            </list>
        </constructor-arg>
    </bean> -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">  
        <property name="connectionFactory"   ref="jredisConnectionFactory" />  
        <property name="defaultSerializer">  
            <bean  class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
        </property>  
    </bean>
	
	<bean id = "messageListener" class="com.huaming.redis.listener.TopicMessageListener" />
    <bean id="serialization" class="org.springframework.data.redis.serializer.StringRedisSerializer" />
    <bean id="redisContainer" class="org.springframework.data.redis.listener.RedisMessageListenerContainer">
        <property name="connectionFactory" ref="jredisConnectionFactory"/>
         <property name="taskExecutor">  
            <bean  
                class="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler">  
                <property name="poolSize" value="3"></property>  
            </bean>  
        </property>  
        <property name="messageListeners">
            <!-- map of listeners and their associated topics (channels or/and patterns) -->
            <map>
                <entry key-ref="messageListener">
                    <bean class="org.springframework.data.redis.listener.ChannelTopic">
                        <constructor-arg value="wzm.test1.ch" />   <!-- 这里配置消费端需要订阅的频道，可以是多个。该一例子订阅wzm.test.ch这个频道  -->
                    </bean>
                </entry>
            </map>
        </property>
    </bean>
</beans>